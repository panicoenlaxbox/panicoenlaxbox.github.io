<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Programación desordenada</title><link>https://panicoenlaxbox.com/tags/python/</link><description>Recent content in python on Programación desordenada</description><generator>Hugo -- gohugo.io</generator><managingEditor>panicoenlaxbox@gmail.com (Sergio León)</managingEditor><webMaster>panicoenlaxbox@gmail.com (Sergio León)</webMaster><lastBuildDate>Mon, 04 Apr 2022 10:20:16 +0200</lastBuildDate><atom:link href="https://panicoenlaxbox.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Organización de un proyecto de Python</title><link>https://panicoenlaxbox.com/post/organizacion-proyecto-python/</link><pubDate>Mon, 04 Apr 2022 10:20:16 +0200</pubDate><author>panicoenlaxbox@gmail.com (Sergio León)</author><guid>https://panicoenlaxbox.com/post/organizacion-proyecto-python/</guid><description>&lt;p>Aunque es perfectamente válido incluir todo nuestro código en un sólo fichero &lt;code>.py&lt;/code>, tarde o temprano, cualquier proyecto nos obligará a pensar en cuál sería la estructura ideal de paquetes y módulos.&lt;/p></description></item><item><title>Duck typing en python</title><link>https://panicoenlaxbox.com/post/duck-typing-python/</link><pubDate>Sun, 12 Dec 2021 13:01:20 +0200</pubDate><author>panicoenlaxbox@gmail.com (Sergio León)</author><guid>https://panicoenlaxbox.com/post/duck-typing-python/</guid><description>&lt;p>El &lt;a href="https://es.wikipedia.org/wiki/Duck_typing">Duck typing&lt;/a> es una forma de tipado estructural que permite definir interfaces de objetos, que no estando relacionados, se comportan de forma similar.&lt;/p></description></item><item><title>Primeros pasos con Python</title><link>https://panicoenlaxbox.com/post/primeros-pasos-python/</link><pubDate>Tue, 02 Nov 2021 09:53:30 +0200</pubDate><author>panicoenlaxbox@gmail.com (Sergio León)</author><guid>https://panicoenlaxbox.com/post/primeros-pasos-python/</guid><description>&lt;p>Después de instalar Python ¿por dónde empiezo? ¿dónde instalo los paquetes? ¿uso &lt;a href="https://pipenv-fork.readthedocs.io/en/latest/">pipenv&lt;/a> o &lt;a href="https://python-poetry.org/">poetry&lt;/a>? ¿&lt;a href="https://code.visualstudio.com/">VSCode&lt;/a> o &lt;a href="https://www.jetbrains.com/es-es/pycharm/">PyCharm&lt;/a>?&lt;/p></description></item><item><title>Crear un paquete Python y publicarlo en Azure DevOps con GitHub Actions</title><link>https://panicoenlaxbox.com/post/python-github-devops/</link><pubDate>Sun, 14 Feb 2021 12:11:06 +0200</pubDate><author>panicoenlaxbox@gmail.com (Sergio León)</author><guid>https://panicoenlaxbox.com/post/python-github-devops/</guid><description>&lt;p>En este post, me gustaría compartir una forma de crear un paquete de Python, publicarlo en un feed privado con una GitHub action y consumirlo en una aplicación cliente.&lt;/p></description></item></channel></rss>